{
  "title": "InvestStrategyRegistry",
  "description": "Test cases for InvestStrategyRegistry contract",
  "stories": [
    {
      "description": "Operator should be able to set one strategy only one time for one tokensHash",
      "setActions": [
        {
          "action": "setStrategy(bytes32,(address,address,bool)[])",
          "args": {},
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "action": "setStrategy(bytes32,(address,address,bool)[])",
          "args": {},
          "executer": "owner",
          "expect": "fail",
          "message": "isNewStrategy"
        }
      ],
      "getActions": [
        {
          "action": "getStrategy(bytes32)",
          "args": {},
          "expectedValue": {}
        }
      ]
    },
    {
      "description": "Non-Operator shouldn't be able to set strategy",
      "setActions": [
        {
          "action": "setStrategy(bytes32,(address,address,bool)[])",
          "args": {},
          "executer": "user1",
          "expect": "fail",
          "message": "caller is not the operator"
        }
      ],
      "getActions": []
    },
    {
      "description": "Operator cannot set multiple strategies which not correspond to the number of token input",
      "setActions": [
        {
          "action": "setStrategy(bytes32[],(address,address,bool)[][])",
          "args": {
            "mismatchLength": true
          },
          "executer": "owner",
          "expect": "fail",
          "message": "!index mismatch"
        }
      ],
      "getActions": []
    }
  ]
}
